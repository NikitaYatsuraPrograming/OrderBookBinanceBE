version: '3.7'
services:
  db:
    image: postgres:14.5
    container_name: order_book_binance_db
    env_file: .env
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    ports:
      - "5578:5432"
    restart: always
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  redis:
    image: redis:alpine
    restart: on-failure
    container_name: order_book_binance_redis
    volumes:
      - ./redis_data:/root/redis
      - ./redis_data/redis.conf:/usr/local/etc/redis/redis.conf
    expose:
      - 6979
    healthcheck:
      test: [ "CMD", "redis-cli", "-h", "localhost", "ping" ]
      interval: 1m
      timeout: 5s
      retries: 2

  backend:
    container_name: order_book_binance
    build:
      context: .
      dockerfile: docker/python/Dockerfile
    env_file: .env
    stdin_open: true
    tty: true
    expose:
      - 8082
    ports:
      - "8082:8082"
    volumes:
      - ./backend:/backend
    depends_on:
      - db
      - redis
      - celery_worker_1
      - flower
      - nginx
    working_dir: /backend
    command: uvicorn main:app --host 0.0.0.0 --reload --port 8082

  celery_worker_1:
    container_name: order_book_binance_celery_worker_1
    image: orderbookbinancebe-backend
    depends_on:
      - db
      - redis
    env_file: .env
    working_dir: /backend
    volumes:
      - ./backend:/backend
    command: /bin/bash -c "celery --app celery_conf:app worker -l info -B "

  flower:
    image: orderbookbinancebe-backend
    restart: on-failure
    env_file: .env
    working_dir: /backend
    ports:
      - "5555:5555"
    volumes:
      - ./backend:/backend
    depends_on:
      - db
      - redis
    command: celery --app celery_conf:app flower

  nginx:
    restart: always
    image: library/nginx:1.9.0
    expose:
      - 8081
    volumes:
      - ./docker/nginx:/etc/nginx/conf.d
      - ./docker/logs/nginx:/var/log/nginx
      - ./backend:/backend

